var e,t,r,o,s,n=require("mocyang-utils");e=module.exports,Object.defineProperty(e,"__esModule",{value:!0,configurable:!0}),t=module.exports,r="default",o=()=>a,Object.defineProperty(t,r,{get:o,set:s,enumerable:!0,configurable:!0});class i{constructor(){this.models={id:[],data:{}}}async load(e,t){if(!n.isFunction(e))throw new Error("Expected a function to fetch data!");const r=this;return new Promise((async t=>{const o=await e();r.cache(o.data),t()}))}add(e){return this.cache(e),this}cache(e){if(!n.isArray(e))throw new Error("parameter error. not expected type.");const t=this.models;return t.id=Array.from(new Set([...t.id,...e.map((e=>e.id))])),t.data=e.reduce(((e,t)=>(e[t.id]=t,e)),t.data),this}all(){return Object.values(this.models.data)}filter(e){const t=this.all();if(n.isFunction(e))return t.filter(e)}filterOutdoor(){return this.all().filter((e=>!e.indoor))}filterIndoor(e,t){const r=this.all(),o=`${e}#${t}`;return r.filter((t=>t.build_id===e&&t.floor_id===o))}one(e){return this.models.data[e]}batchedAddModel(e,t,r){r=n.extend({size:100,onSuccess:n.NOOP,onProgress:n.NOOP},r);const{size:o,onSuccess:s,onProgress:i}=r;if(!n.isArray(t))return void console.error("type source must be an array, got "+n.toTypeString(t));const a=+new Date,c=t.length,l=(r,n=0)=>{const d=t.slice(r,n);r>c-1?setTimeout((()=>{const e=+new Date;console.log(`加载 ${c} 个模型,共耗时: ${(e-a)/1e3}s. `),i&&i({progress:100}),s&&s()}),0):e.OverLayerCreateObjects&&e.OverLayerCreateObjects(d,(e=>{r<c&&(i&&i({progress:Math.floor(Math.pow(10,4)*(r/c)/100)}),setTimeout((()=>{l(n,n+o)}),10))}))};l(0,o)}}var a=new class{constructor(){this.controllers=new Map}create(e){if(!e)throw new Error("controller key is required!");const t=this.get(e);if(t)return t;const r=new i;return this.controllers.set(e,r),this.get(e)}get(e){return this.controllers.get(e)}};
//# sourceMappingURL=index.js.map
