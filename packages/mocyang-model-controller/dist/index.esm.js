import{isFunction as e,isArray as t,extend as r,NOOP as s,toTypeString as o}from"mocyang-utils";class n{constructor(){this.models={id:[],data:{}}}async load(t,r){if(!e(t))throw new Error("Expected a function to fetch data!");const s=this;return new Promise((async e=>{const r=await t();s.cache(r.data),e()}))}add(e){return this.cache(e),this}cache(e){if(!t(e))throw new Error("parameter error. not expected type.");const r=this.models;return r.id=Array.from(new Set([...r.id,...e.map((e=>e.id))])),r.data=e.reduce(((e,t)=>(e[t.id]=t,e)),r.data),this}all(){return Object.values(this.models.data)}filter(t){const r=this.all();if(e(t))return r.filter(t)}filterOutdoor(){return this.all().filter((e=>!e.indoor))}filterIndoor(e,t){const r=this.all(),s=`${e}#${t}`;return r.filter((t=>t.build_id===e&&t.floor_id===s))}one(e){return this.models.data[e]}batchedAddModel(e,n,a){a=r({size:100,onSuccess:s,onProgress:s},a);const{size:i,onSuccess:c,onProgress:l}=a;if(!t(n))return void console.error("type source must be an array, got "+o(n));const d=+new Date,u=n.length,h=(t,r=0)=>{const s=n.slice(t,r);t>u-1?setTimeout((()=>{const e=+new Date;console.log(`加载 ${u} 个模型,共耗时: ${(e-d)/1e3}s. `),l&&l({progress:100}),c&&c()}),0):e.OverLayerCreateObjects&&e.OverLayerCreateObjects(s,(e=>{t<u&&(l&&l({progress:Math.floor(Math.pow(10,4)*(t/u)/100)}),setTimeout((()=>{h(r,r+i)}),10))}))};h(0,i)}}var a=new class{constructor(){this.controllers=new Map}create(e){if(!e)throw new Error("controller key is required!");const t=this.get(e);if(t)return t;const r=new n;return this.controllers.set(e,r),this.get(e)}get(e){return this.controllers.get(e)}};export{a as default};
//# sourceMappingURL=index.esm.js.map
