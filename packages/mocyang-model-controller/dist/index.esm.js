new class{parse(t=""){if(-1===(t=t||window.location.href).indexOf("?"))return{};let e="?"===t[0]?t.substr(1):t.substring(t.lastIndexOf("?")+1);return e?(e=e.split("&"),Array.from(e).reduce(((t,e)=>{const r=e.split("=");let o=decodeURIComponent(r[1]);return-1!==o.indexOf(",")&&(o=o.split(",")),t[r[0]]=o,t}),{})):{}}stringify(t="",e={}){if(n(e))return`${t}?${Object.keys(e).reduce(((t,r)=>{let o=e[r];return s(e[r])&&(o=o.reduce(((t,e)=>(t.push(e),t)),[]).join(",")),t.push(`${r}=${encodeURIComponent(o)}`),t}),[]).join("&")}`}};new class{randomColor(){return`#${(268435456*Math.random()<<0).toString(16).slice(-6)}`}randomNumber(t,e){return Math.floor(Math.random()*(e-t+1)+t)}pick(t){return t[this.randomNumber(0,t.length-1)]}};const t=()=>{},e=Object.assign,r=(Object.prototype.hasOwnProperty,Object.prototype.toString),o=t=>r.call(t),n=t=>"[object Object]"===o(t),s=Array.isArray,i=t=>"function"==typeof t;class a{constructor(){this.models={id:[],data:{}}}async load(r,o){if(o=e({manual:!1,onSuccess:t,onProgress:t},o),!i(r))throw new Error("Expected a function to fetch data!");const n=this;return new Promise((async t=>{const e=await r();n.cache(e.data),t()}))}add(t){return this.cache(t),this}cache(t){if(!s(t))throw new Error("parameter error. not expected type.");const e=this.models;return e.id=Array.from(new Set([...e.id,...t.map((t=>t.id))])),e.data=t.reduce(((t,e)=>(t[e.id]=e,t)),e.data),this}all(){return Object.values(this.models.data)}filter(t){const e=this.all();if(i(t))return e.filter(t)}filterOutdoor(){return this.all().filter((t=>!t.indoor))}filterIndoor(t,e){const r=this.all(),o=`${t}#${e}`;return r.filter((e=>e.build_id===t&&e.floor_id===o))}one(t){return this.models.data[t]}batchedAddModel(t,e,r=100,o){if(!s(e)||r>200)return;const n=+new Date,i=e.length,a=(s,c=0)=>{const l=e.slice(s,c);s>i-1?setTimeout((()=>{const t=+new Date;console.log(`加载 ${i} 个模型,共耗时: ${(t-n)/1e3}s. `),o&&o()}),0):t.OverLayerCreateObjects(l,(t=>{s<i&&setTimeout((()=>{a(c,c+r)}),10)}))};a(0,r)}}var c=new class{constructor(){this.controllers=new Map}create(t){if(!t)throw new Error("controller key is required!");const e=this.get(t);if(e)return e;const r=new a;return this.controllers.set(t,r),this.get(t)}get(t){return this.controllers.get(t)}};export{c as default};
//# sourceMappingURL=index.esm.js.map
